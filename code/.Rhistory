ls()
abinom=readRDS("~/multistate2/data/abinom.rds")
head(abinom)
mpce=readRDS("~/multistate2/output/mpcecomplete.rds")
source("~/dynamichr/code/utils.R")
source("~/multistate2/code/newsmooth.R")
compute_prediction_product(modelfit = abinom,start = "Heatlh",stop = "Cad",agesmooth = c(40:80),agepredinterval = c(40:50),covariatevector = moce[1,])
compute_prediction_product(modelfit = abinom,start = "Heatlh",stop = "Cad",agesmooth = c(40:80),agepredinterval = c(40:50),covariatevector = mpce[1,])
start="Health"
stop="Cad"
agepredinterval=c(40:80)
agesmooth=c(40:80)
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
modelfit=abinom
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
agesmooth
modelfit
library("dplyr")
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
coefsmooth
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
m=coefplotsmooth(ages = ages,start = start,stop = stop,modelfit = modelfit)$m
ages=c(40:80)
m=coefplotsmooth(ages = ages,start = start,stop = stop,modelfit = modelfit)$m
start
stop
coefplotsmooth
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
agenames=as.character(c(ages))
s=sapply(agenames,function(x){modelfit$model_list[[x]][[stop]][[start]][,"Estimate"]})
s=data.frame(s)
colnames(s)=agenames
agenames
dim(s)
s=sapply(agenames,function(x){modelfit$model_list[[x]][[stop]][[start]][,"Estimate"]})
s
abinom=readRDS("~/multistate2/data/abinom_rf.rds")
abinom=readRDS("~/multistate2/data/abinom.rds")
dfp=data.table(mpce)
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
abinom = fitfunc(df_frame = dfp,
ages = ages,
nstates = nstates,mode = "binomial",covariates = "cad.prs+yearsinstate+statin_now+antihtn_now+f.31.0.0")
source("~/multistate2/code/fitarray.R")
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
abinom = fitfunc(df_frame = dfp,
ages = ages,
nstates = nstates,mode = "binomial",covariates = "cad.prs+yearsinstate+statin_now+antihtn_now+f.31.0.0")
abinom=readRDS("~/multistate/output/allcovariates.rds")
compute_prediction_product(modelfit = abinom,start = "Heatlh",stop = "Cad",agesmooth = c(40:80),agepredinterval = c(40:50),covariatevector = mpce[1,])
head(abinom$model_list)
compute_prediction_product(modelfit = abinom,start = "Heatlh",stop = "Cad",agesmooth = c(40:80),agepredinterval = c(40:50),covariatevector = mpce[1,])
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
m=coefplotsmooth(ages = ages,start = start,stop = stop,modelfit = modelfit)$m
coefplotsmooth
agenames=as.character(c(ages))
s=sapply(agenames,function(x){modelfit$model_list[[x]][[stop]][[start]][,"Estimate"]})
s
agenames=as.character(c(ages))
s=sapply(agenames,function(x){modelfit$model_list[[x]][[stop]][[start]][,"Estimate"]})
agenames
modelfit
agenames=as.character(c(ages))
s=sapply(agenames,function(x){modelfit$model_list[[x]][[stop]][[start]][,"Estimate"]})
modelfit=abinom
m=coefplotsmooth(ages = ages,start = start,stop = stop,modelfit = modelfit)$m
m
coefplotsmooth
compute_prediction_product(modelfit = abinom,start = "Health",stop = "Cad",agesmooth = ages,agepredinterval = ages,covariatevector = mpce[1,])
compute_prediction_product
compute_prediction_product <- function(modelfit,start,stop, agesmooth,agepredinterval, covariatevector) {
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
coefficients_matrix=convertlistmat(smoothedlist = smoothedlist)
# Subset the matrix to include only the rows within the given age interval
age_rows <- coefficients_matrix[coefficients_matrix[, 'age'] %in% agepredinterval, ]
xmat=matrix(covariatevector)
# Compute the prediction using the linear model
logodds <-as.matrix(age_rows[,-1])%*%xmat
prediction=exp(logodds)/(1+exp(logodds))
prediction_not=1-prediction
# Compute the product of the predictions
prediction_product <- prod(prediction_not)
return(1-prediction_product)
}
compute_prediction_product
compute_prediction_product(modelfit = abinom,start = "Health",stop = "Cad",agesmooth = ages,agepredinterval = ages,covariatevector = mpce[1,])
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
coefficients_matrix=convertlistmat(smoothedlist = smoothedlist)
head(coefficients_matrix)
covariatevector=mpce[1,]
compute_prediction_product <- function(modelfit,start,stop, agesmooth,agepredinterval, covariatevector) {
smoothedlist=coefsmooth(start = start,stop = stop,ages = agesmooth,modelfit = modelfit)
coefficients_matrix=convertlistmat(smoothedlist = smoothedlist)
# Subset the matrix to include only the rows within the given age interval
age_rows <- coefficients_matrix[coefficients_matrix[, 'age'] %in% agepredinterval, ]
xmat=matrix(covariatevector)
# Compute the prediction using the linear model
logodds <-as.matrix(age_rows[,-1])%*%xmat
prediction=exp(logodds)/(1+exp(logodds))
prediction_not=1-prediction
# Compute the product of the predictions
prediction_product <- prod(prediction_not)
return(1-prediction_product)
}
xmat=matrix(covariatevector)
xmat
covariatevector=mpce[1,c(1,cad.prs,statin,antihtn,f.31.0.0)]
xmat=matrix(covariatevector)
xmat
xmat=matrix(as.numeric(covariatevector))
xmat
xmat=matrix(as.numeric(c(1,covariatevector))
covariatevector
cvcovariatevector[-1]
cv=covariatevector[-1]
cv
covariatevector=cv
matrix(as.numeric(c(1,covariatevector))
)
xmat=matrix(as.numeric(c(1,covariatevector)))
xmat
dim(coefficients_matrix)
logodds <-as.matrix(age_rows[,-1])%*%xmat
age_rows <- coefficients_matrix[coefficients_matrix[, 'age'] %in% agepredinterval, ]
xmat=matrix(as.numeric(c(1,covariatevector)))
# Compute the prediction using the linear model
logodds <-as.matrix(age_rows[,-1])%*%xmat
prediction=exp(logodds)/(1+exp(logodds))
prediction_not=1-prediction
# Compute the product of the predictions
prediction_product <- prod(prediction_not)
return(1-prediction_product)
prediction_product
source("~/multistate2/code/newsmooth.R")
