---
title: "Threshold Analysis"
subtitle: "Weibull Exploration"
format: 
  html:
    toc: true
    toc-location: body
date: 1-7-2024
author:
  - name: "Sarah Urbut"
    affiliations: "MGH"
embed-resources: true
toc: true
toc-expand: 2
toc-title: Contents
page-layout: full
code-fold: true
editor: visual
---

# **Simulate a Continuous Genetic Risk Score**:

As before, we simulate the genetic risk score with a combination of rare and common variants.

```{r,echo=FALSE,warning=FALSE,message=FALSE}

library(survival)
library(survival)
library(dplyr)
library(reshape2)
library(ggplot2)

```

-   The distributions from which the effect sizes for rare and common variants are drawn should be chosen based on real-world data or literature to reflect actual genetic risk profiles.

-   The number of rare and common variants (**`n_rare_variants`** and **`n_common_variants`**) and their frequencies should be set to realistic values.

-   This approach results in a more nuanced genetic risk score, which is more representative of actual genetic variability in a population.

```{r}
# Summarize by age
# Define the number of individuals
n <- 10000
n_rare_variants <- 10  # Number of rare variants per individual
n_common_variants <- 100  # Number of common variants per individual

# Simulate rare and common variant effects
set.seed(123)  # For reproducibility

# Sample rare and common effect sizes from a distribution for each individual
# Simulating the effect of rare and common variants
rare_effect_size <- rnorm(n_rare_variants, mean = 1.5, sd = 0.5)
rare_variants <- matrix(rbinom(n * n_rare_variants, 1, 0.01), ncol = n_rare_variants) * rare_effect_size
common_effect_size <- rnorm(n_common_variants, mean = 0.1, sd = 0.05)
common_variants <- matrix(rbinom(n * n_common_variants, 1, 0.5), ncol = n_common_variants) * common_effect_size


# Sum the rare and common load to get the total genetic risk score
genetic_risk_score <- rowSums(rare_variants) + rowSums(common_variants)


hist(genetic_risk_score)
```

**Simulate Event Times Using the Weibull Distribution**:

-   The choice of shape parameter (greater than 1) is crucial to ensure an increasing hazard rate over time, leading to a 'J'-shaped distribution.

-   The scale parameter, influenced by the genetic risk score, will affect the distribution of event times but won't change the overall shape of the hazard function.

-   The exact values for the shape and scale parameters, as well as the distributions for the genetic risk scores, should be based on the specific characteristics of the disease or trait you're studying.

```{r}

set.seed(123)

# Normalize the genetic risk score to a range [0, 1]
genetic_risk_score_normalized <- (genetic_risk_score - min(genetic_risk_score)) / (max(genetic_risk_score) - min(genetic_risk_score))

set.seed(123)
# Set seed for reproducibility
set.seed(123)
shape_parameter=5
# Assuming genetic_risk_score_normalized and n are already defined
baseline_scale <- 100  # Starting scale for someone with average risk
max_reduction <- 80  # Max reduction of scale for someone with the highest risk

# Calculate the scale parameter as a linear function of the genetic risk score
scale_parameter <- baseline_scale - (genetic_risk_score_normalized * max_reduction)

# Ensure all scale parameters are positive and within a reasonable range
#scale_parameter <- pmax(scale_parameter, 20)  # Ensure scales don't go below 20

# Simulate the event ages with the Weibull distribution
event_ages <- rweibull(n, shape = shape_parameter, scale = scale_parameter)

# Apply a realistic age range to the simulated event ages
event_ages <- pmax(event_ages, 20)  # No events before age 20
event_ages <- pmin(event_ages, 100)  # No events after age 100

# Plot the relationship between genetic risk scores and event ages using transparency
plot(genetic_risk_score_normalized, event_ages, col=rgb(0, 0, 0, 0.1), pch=16,
     main="Scatter Plot of Event Ages vs Genetic Risk Score",
     xlab="Genetic Risk Score Normalized", ylab="Event Ages")
```

**Analysis and Visualization**:

Analyze or visualize the distribution of event times to understand the impact of the genetic risk.

```{r}
# Creating a data frame
data <- data.frame(genetic_risk_score_normalized, event_times=round(event_ages,0),rare_load= rowSums(rare_variants),common_load=rowSums(common_variants))

# Summarizing the rare and common variants by age
summary_by_age <- data %>%
  group_by(event_times) %>%
  summarise(
    avg_risk_score = mean(genetic_risk_score_normalized),
    total_events = length(event_times),
    avg_rare_load = mean(rare_load),
    avg_common_load = mean(common_load),
      )

m=melt(summary_by_age,id.vars = "event_times")

ggplot(m,aes(event_times,value,fill=variable))+geom_bar(stat="identity")+facet_wrap(~variable,scales = "free")+theme_classic()
```
