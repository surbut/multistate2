)$PredictedIntervalrisk
ten.year.new[i] = mean(atrisk$msten)
atrisk$mslifetime=compute_prediction_product_matrix(
atrisk = ar,
agepredinterval = c(age:(80)),
coefmat = coefs
)$PredictedIntervalrisk
lifetime.new[i] = mean(atrisk$mslifetime)
emp.ten.year[i] = mean(atrisk$chd==1&atrisk$chddate<(365*10))
emp.lifetime[i] = mean(atrisk$chd==1&atrisk$chddate<(365*(80-age)))
ascvd.10.year[i]=mean(atrisk$as2)
ascvd.30.year[i]=mean(atrisk$lt)
atrisk$outcometen=ifelse(atrisk$chd==1&atrisk$chddate<(365*10),1,0)
atrisk$outcomelife=ifelse(atrisk$chd==1&atrisk$chddate<(365*(80-age)),1,0)
#d=d[!is.na(d$ascvd_10y_accaha),]
aucmat[i, 1] = roc(atrisk$outcometen ~ atrisk$msten)$auc
semat[i, 1] = sqrt(var(roc(atrisk$outcometen ~ atrisk$msten)))
#
aucmat[i, 2] = roc(atrisk$outcometen ~ atrisk$as2)$auc
semat[i, 2] = sqrt(var(roc(atrisk$outcometen ~ atrisk$as2)))
#
aucmat[i, 3] = roc(atrisk$outcomelife ~ atrisk$mslifetime)$auc
semat[i, 3] = sqrt(var(roc(atrisk$outcomelife ~ atrisk$mslifetime)))
aucmat[i, 4] =  roc(atrisk$outcomelife ~ atrisk$lt)$auc
semat[i, 4] = sqrt(var(roc(atrisk$outcomelife ~ atrisk$lt)))
}
library(ehaGoF)
pcten=gofRMSE(Obs = as.vector(emp.ten.year*100),Prd = as.vector(ascvd.10.year))
msten=gofRMSE(Obs = as.vector(emp.ten.year*100),Prd = as.vector(ten.year.new*100))
mslif=gofRMSE(Obs = as.vector(emp.lifetime*100),Prd = as.vector(lifetime.new*100))
pclif=gofRMSE(Obs = as.vector(emp.lifetime*100),Prd = as.vector(ascvd.30.year))
pcten
msten
mslif
pclif
df <- data.frame(
metric = c("PCEten", "MSTen", "MSLife", "FRS30y"),
value = c(pcten,msten,mslif,pclif)
)
df
df$metric=factor(df$metric,levels = c("MSTen","PCEten","MSLife","FRS30y"))
# Create the barplot
rmse=ggplot(df, aes(x = metric, y = value,fill=metric)) +
geom_bar(stat = "identity") +
labs(y = "RMSE (%)", x = "Score",fill="score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rmse
rm(list=ls())
fos=read.table("~/Desktop/sraempty/phs000007.v33.pht006027.v4.p14.c1.vr_wkthru_ex09_1_1001s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
fhs=read.table("~/Desktop/sraempty/phs000007.v33.pht007777.v3.p14.c1.vr_wkthru_ex32_0_0997s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
surv=read.table("/Users/sarahurbut/Desktop/sraempty/phs000007.v33.pht003316.v10.p14.c1.vr_survcvd_2019_a_1334s.HMB-IRB-MDS.txt.gz",skip=1,sep="\t",header=T)
m=merge(fos[,c("shareid","AGE1","SBP1","HDL1","SEX","CURRSMK1","HRX1","LIPRX1","TC1","DMRX1")],surv,by = "shareid")
prs=fread("~/Library/CloudStorage/Dropbox-Personal/Fram_allchr_CAD_c1.profile")
prs$score=scale(prs$V2)
firstmeasure=na.omit(merge(m,prs[,c("V1","score")],by.x="shareid",by.y="V1"))
firstmeasure$sex=ifelse(firstmeasure$SEX==2,"male","female")
firstmeasure$sexu=ifelse(firstmeasure$SEX==2,0,1)
firstmeasure$cad.prs.lec=cut(firstmeasure$score,breaks = c(-5.02,-0.84,0.84,5.02),labels = c("low","mid","high"))
firstmeasure$int=interaction(firstmeasure$sexu,firstmeasure$cad.prs.lec)
levels(firstmeasure$int) <- c(1,2,3,4,5,6)
firstmeasure$as2=compute_CVrisk2(firstmeasure,scores = "as2",age = "AGE1",gender = "sex",
race = "white",sbp = "SBP1",hdl = "HDL1",
bp_med ="HRX1",totchol = "TC1",diabetes = "DMRX1",smoker = "CURRSMK1",lipid_med = "LIPRX1")$as2
library(CVrisk)
source("~/dynamichr/code/utils.R")
source("~/multistate2//code/smoothtest.R")
source("~/multistate2//code/newsmooth.R")
source("~/multistate2/code/fitarray.R")
library("reshape2")
source("~/multistate2/code/arrayindicate.R")
source("../code/frs30_URBUT/fun.frs_30ynew.R")
rm(list=ls())
fos=read.table("~/Desktop/sraempty/phs000007.v33.pht006027.v4.p14.c1.vr_wkthru_ex09_1_1001s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
fhs=read.table("~/Desktop/sraempty/phs000007.v33.pht007777.v3.p14.c1.vr_wkthru_ex32_0_0997s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
surv=read.table("/Users/sarahurbut/Desktop/sraempty/phs000007.v33.pht003316.v10.p14.c1.vr_survcvd_2019_a_1334s.HMB-IRB-MDS.txt.gz",skip=1,sep="\t",header=T)
m=merge(fos[,c("shareid","AGE1","SBP1","HDL1","SEX","CURRSMK1","HRX1","LIPRX1","TC1","DMRX1")],surv,by = "shareid")
prs=fread("~/Library/CloudStorage/Dropbox-Personal/Fram_allchr_CAD_c1.profile")
prs$score=scale(prs$V2)
firstmeasure=na.omit(merge(m,prs[,c("V1","score")],by.x="shareid",by.y="V1"))
firstmeasure$sex=ifelse(firstmeasure$SEX==2,"male","female")
firstmeasure$sexu=ifelse(firstmeasure$SEX==2,0,1)
firstmeasure$cad.prs.lec=cut(firstmeasure$score,breaks = c(-5.02,-0.84,0.84,5.02),labels = c("low","mid","high"))
firstmeasure$int=interaction(firstmeasure$sexu,firstmeasure$cad.prs.lec)
levels(firstmeasure$int) <- c(1,2,3,4,5,6)
firstmeasure$as2=compute_CVrisk2(firstmeasure,scores = "as2",age = "AGE1",gender = "sex",
race = "white",sbp = "SBP1",hdl = "HDL1",
bp_med ="HRX1",totchol = "TC1",diabetes = "DMRX1",smoker = "CURRSMK1",lipid_med = "LIPRX1")$as2
source("~/dynamichr/code/utils.R")
rm(list=ls())
fos=read.table("~/Desktop/sraempty/phs000007.v33.pht006027.v4.p14.c1.vr_wkthru_ex09_1_1001s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
fhs=read.table("~/Desktop/sraempty/phs000007.v33.pht007777.v3.p14.c1.vr_wkthru_ex32_0_0997s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
surv=read.table("/Users/sarahurbut/Desktop/sraempty/phs000007.v33.pht003316.v10.p14.c1.vr_survcvd_2019_a_1334s.HMB-IRB-MDS.txt.gz",skip=1,sep="\t",header=T)
m=merge(fos[,c("shareid","AGE1","SBP1","HDL1","SEX","CURRSMK1","HRX1","LIPRX1","TC1","DMRX1")],surv,by = "shareid")
prs=fread("~/Library/CloudStorage/Dropbox-Personal/Fram_allchr_CAD_c1.profile")
prs$score=scale(prs$V2)
firstmeasure=na.omit(merge(m,prs[,c("V1","score")],by.x="shareid",by.y="V1"))
firstmeasure$sex=ifelse(firstmeasure$SEX==2,"male","female")
firstmeasure$sexu=ifelse(firstmeasure$SEX==2,0,1)
firstmeasure$cad.prs.lec=cut(firstmeasure$score,breaks = c(-5.02,-0.84,0.84,5.02),labels = c("low","mid","high"))
firstmeasure$int=interaction(firstmeasure$sexu,firstmeasure$cad.prs.lec)
levels(firstmeasure$int) <- c(1,2,3,4,5,6)
firstmeasure$as2=compute_CVrisk2(firstmeasure,scores = "as2",age = "AGE1",gender = "sex",
race = "white",sbp = "SBP1",hdl = "HDL1",
bp_med ="HRX1",totchol = "TC1",diabetes = "DMRX1",smoker = "CURRSMK1",lipid_med = "LIPRX1")$as2
compute_CVrisk2=function (df, scores = c("ascvd_10y_accaha", "as2",
"ascvd_10y_frs_simple", "chd_10y_mesa", "chd_10y_mesa_cac"),
age, gender, race, sbp = NULL, bmi = NULL, hdl = NULL, totchol = NULL,
bp_med = NULL, smoker = NULL, diabetes = NULL, lipid_med = NULL,
fh_heartattack = NULL, cac = NULL)
compute_CVrisk2=function (df, scores = c("ascvd_10y_accaha", "as2",
"ascvd_10y_frs_simple", "chd_10y_mesa", "chd_10y_mesa_cac"),
age, gender, race, sbp = NULL, bmi = NULL, hdl = NULL, totchol = NULL,
bp_med = NULL, smoker = NULL, diabetes = NULL, lipid_med = NULL,
fh_heartattack = NULL, cac = NULL)
compute_CVrisk2=function (df, scores = c("ascvd_10y_accaha", "as2",
"ascvd_10y_frs_simple", "chd_10y_mesa", "chd_10y_mesa_cac"),
age, gender, race, sbp = NULL, bmi = NULL, hdl = NULL, totchol = NULL,
bp_med = NULL, smoker = NULL, diabetes = NULL, lipid_med = NULL,
fh_heartattack = NULL, cac = NULL)
compute_CVrisk2=function (df, scores = c("ascvd_10y_accaha", "as2",
"ascvd_10y_frs_simple", "chd_10y_mesa", "chd_10y_mesa_cac"),
age, gender, race, sbp = NULL, bmi = NULL, hdl = NULL, totchol = NULL,
bp_med = NULL, smoker = NULL, diabetes = NULL, lipid_med = NULL,
fh_heartattack = NULL, cac = NULL)
{
source("~/dynamichr/code/utils.R")
compute_CVrisk2=function (df, scores = c("ascvd_10y_accaha", "as2",
compute_CVrisk2
fos=read.table("~/Desktop/sraempty/phs000007.v33.pht006027.v4.p14.c1.vr_wkthru_ex09_1_1001s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
fhs=read.table("~/Desktop/sraempty/phs000007.v33.pht007777.v3.p14.c1.vr_wkthru_ex32_0_0997s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
surv=read.table("/Users/sarahurbut/Desktop/sraempty/phs000007.v33.pht003316.v10.p14.c1.vr_survcvd_2019_a_1334s.HMB-IRB-MDS.txt.gz",skip=1,sep="\t",header=T)
m=merge(fos[,c("shareid","AGE1","SBP1","HDL1","SEX","CURRSMK1","HRX1","LIPRX1","TC1","DMRX1")],surv,by = "shareid")
prs=fread("~/Library/CloudStorage/Dropbox-Personal/Fram_allchr_CAD_c1.profile")
prs$score=scale(prs$V2)
firstmeasure=na.omit(merge(m,prs[,c("V1","score")],by.x="shareid",by.y="V1"))
firstmeasure$sex=ifelse(firstmeasure$SEX==2,"male","female")
firstmeasure$sexu=ifelse(firstmeasure$SEX==2,0,1)
firstmeasure$cad.prs.lec=cut(firstmeasure$score,breaks = c(-5.02,-0.84,0.84,5.02),labels = c("low","mid","high"))
firstmeasure$int=interaction(firstmeasure$sexu,firstmeasure$cad.prs.lec)
levels(firstmeasure$int) <- c(1,2,3,4,5,6)
firstmeasure$as2=compute_CVrisk2(firstmeasure,scores = "as2",age = "AGE1",gender = "sex",
race = "white",sbp = "SBP1",hdl = "HDL1",
bp_med ="HRX1",totchol = "TC1",diabetes = "DMRX1",smoker = "CURRSMK1",lipid_med = "LIPRX1")$as2
dat = data.frame(
"id" = firstmeasure$shareid,
"mysex" = as.factor(firstmeasure$sex),
"myage" = firstmeasure$AGE1,
"mysbp" = firstmeasure$SBP1,
"mytreat" = firstmeasure$HRX1,
"mysmoking" = firstmeasure$CURRSMK1,
"mydiabetes" = firstmeasure$DMRX1,
"mytotalchol" = firstmeasure$TC1,
"myhdl" = firstmeasure$HDL1,
"Race" = "white",
"mystatnow" = firstmeasure$LIPRX1
)
#
frs = fun.frs_30yn(
dat,
id = "id",
sex = "mysex",
age = "myage",
sbp = "mysbp",
treat = "mytreat",
smoking = "mysmoking",
diabetes = "mydiabetes",
totalchol = "mytotalchol",
hdl = "myhdl"
)
source("~/dynamichr/code/utils.R")
source("~/multistate2//code/smoothtest.R")
source("~/multistate2//code/newsmooth.R")
source("~/multistate2/code/fitarray.R")
library("reshape2")
source("~/multistate2/code/arrayindicate.R")
source("../code/frs30_URBUT/fun.frs_30ynew.R")
fos=read.table("~/Desktop/sraempty/phs000007.v33.pht006027.v4.p14.c1.vr_wkthru_ex09_1_1001s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
fhs=read.table("~/Desktop/sraempty/phs000007.v33.pht007777.v3.p14.c1.vr_wkthru_ex32_0_0997s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
surv=read.table("/Users/sarahurbut/Desktop/sraempty/phs000007.v33.pht003316.v10.p14.c1.vr_survcvd_2019_a_1334s.HMB-IRB-MDS.txt.gz",skip=1,sep="\t",header=T)
m=merge(fos[,c("shareid","AGE1","SBP1","HDL1","SEX","CURRSMK1","HRX1","LIPRX1","TC1","DMRX1")],surv,by = "shareid")
prs=fread("~/Library/CloudStorage/Dropbox-Personal/Fram_allchr_CAD_c1.profile")
prs$score=scale(prs$V2)
firstmeasure=na.omit(merge(m,prs[,c("V1","score")],by.x="shareid",by.y="V1"))
firstmeasure$sex=ifelse(firstmeasure$SEX==2,"male","female")
firstmeasure$sexu=ifelse(firstmeasure$SEX==2,0,1)
firstmeasure$cad.prs.lec=cut(firstmeasure$score,breaks = c(-5.02,-0.84,0.84,5.02),labels = c("low","mid","high"))
firstmeasure$int=interaction(firstmeasure$sexu,firstmeasure$cad.prs.lec)
levels(firstmeasure$int) <- c(1,2,3,4,5,6)
firstmeasure$as2=compute_CVrisk2(firstmeasure,scores = "as2",age = "AGE1",gender = "sex",
race = "white",sbp = "SBP1",hdl = "HDL1",
bp_med ="HRX1",totchol = "TC1",diabetes = "DMRX1",smoker = "CURRSMK1",lipid_med = "LIPRX1")$as2
dat = data.frame(
"id" = firstmeasure$shareid,
"mysex" = as.factor(firstmeasure$sex),
"myage" = firstmeasure$AGE1,
"mysbp" = firstmeasure$SBP1,
"mytreat" = firstmeasure$HRX1,
"mysmoking" = firstmeasure$CURRSMK1,
"mydiabetes" = firstmeasure$DMRX1,
"mytotalchol" = firstmeasure$TC1,
"myhdl" = firstmeasure$HDL1,
"Race" = "white",
"mystatnow" = firstmeasure$LIPRX1
)
#
frs = fun.frs_30yn(
dat,
id = "id",
sex = "mysex",
age = "myage",
sbp = "mysbp",
treat = "mytreat",
smoking = "mysmoking",
diabetes = "mydiabetes",
totalchol = "mytotalchol",
hdl = "myhdl"
)
firstmeasure$lt=frs$frs_orig
ages=c(20:80)
# modelfit=fitfunc2(data.table(train),ages = ages,nstates = nstates,mode = "binomial",covariates ="cad.prs+f.31.0.0+smoke+antihtn_now+statin_now")
#
firstmeasure=firstmeasure[firstmeasure$LIPRX1==0&firstmeasure$HRX1==0&firstmeasure$TC1<240&firstmeasure$DMRX1==0,]
b=coefplotsmooth2(ages = ages,start = "Health",stop = "Cad",modelfit = modelfit,window_width = 20,span = 0.75,degree = 2)
modelfit=fitfunc2(data.table(train),ages = ages,nstates = nstates,mode = "binomial",covariates ="cad.prs+f.31.0.0+smoke+antihtn_now+statin_now")
train=dfh[1:(nrow(dfh)*0.80),]
source("~/multistate2/code/frs30_URBUT/fun.frs_30y.R")
library(CVrisk)
ages=c(40:80)
nstates=c("Health", "Ht","HyperLip","Dm","Cad","death","Ht&HyperLip","HyperLip&Dm","Ht&Dm","Ht&HyperLip&Dm")
load("~/Library/CloudStorage/Dropbox-Personal///pheno_dir/output/merged_pheno_censor_final_withdrugs_smoke.rds")
fos=read.table("~/Desktop/sraempty/phs000007.v33.pht006027.v4.p14.c1.vr_wkthru_ex09_1_1001s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
fhs=read.table("~/Desktop/sraempty/phs000007.v33.pht007777.v3.p14.c1.vr_wkthru_ex32_0_0997s.HMB-IRB-MDS.txt.gz",header = T,skip = 1,sep="\t")
surv=read.table("/Users/sarahurbut/Desktop/sraempty/phs000007.v33.pht003316.v10.p14.c1.vr_survcvd_2019_a_1334s.HMB-IRB-MDS.txt.gz",skip=1,sep="\t",header=T)
dfh$cad.prs.lec=cut(dfh$cad.prs,breaks = c(-5,-0.84,0.84,5),labels = c("low","mid","high"))
dfh$int=interaction(dfh$f.31.0.0,dfh$cad.prs.lec)
# Relabel the levels of the interaction variable
levels(dfh$int) <- c(1,2,3,4,5,6)
train=dfh[1:(nrow(dfh)*0.80),]
dfascvd=readRDS("~/multistate2//output/dfascvd_newbp.rds")
test=dfh[!(dfh$identifier%in%train$identifier),]
test=merge(test,dfascvd[,-which(names(dfascvd)%in%c("age","anylipidmed0","bp_med2","smoke"))],by.x="identifier",by.y="sample_id")
test$ascvd_10y_accaha=test$as2
test$phenos.enrollment=test$f.21003.0.0
test=data.table(test)
source("~/multistate2/code/frs30_URBUT/fun.frs_30y.R")
library(CVrisk)
ages=c(40:80)
nstates=c("Health", "Ht","HyperLip","Dm","Cad","death","Ht&HyperLip","HyperLip&Dm","Ht&Dm","Ht&HyperLip&Dm")
m=merge(fos[,c("shareid","AGE1","SBP1","HDL1","SEX","CURRSMK1","HRX1","LIPRX1","TC1","DMRX1")],surv,by = "shareid")
prs=fread("~/Library/CloudStorage/Dropbox-Personal/Fram_allchr_CAD_c1.profile")
prs$score=scale(prs$V2)
firstmeasure=na.omit(merge(m,prs[,c("V1","score")],by.x="shareid",by.y="V1"))
firstmeasure$sex=ifelse(firstmeasure$SEX==2,"male","female")
firstmeasure$sexu=ifelse(firstmeasure$SEX==2,0,1)
firstmeasure$cad.prs.lec=cut(firstmeasure$score,breaks = c(-5.02,-0.84,0.84,5.02),labels = c("low","mid","high"))
firstmeasure$int=interaction(firstmeasure$sexu,firstmeasure$cad.prs.lec)
levels(firstmeasure$int) <- c(1,2,3,4,5,6)
firstmeasure$as2=compute_CVrisk2(firstmeasure,scores = "as2",age = "AGE1",gender = "sex",
race = "white",sbp = "SBP1",hdl = "HDL1",
bp_med ="HRX1",totchol = "TC1",diabetes = "DMRX1",smoker = "CURRSMK1",lipid_med = "LIPRX1")$as2
dat = data.frame(
"id" = firstmeasure$shareid,
"mysex" = as.factor(firstmeasure$sex),
"myage" = firstmeasure$AGE1,
"mysbp" = firstmeasure$SBP1,
"mytreat" = firstmeasure$HRX1,
"mysmoking" = firstmeasure$CURRSMK1,
"mydiabetes" = firstmeasure$DMRX1,
"mytotalchol" = firstmeasure$TC1,
"myhdl" = firstmeasure$HDL1,
"Race" = "white",
"mystatnow" = firstmeasure$LIPRX1
)
#
frs = fun.frs_30yn(
dat,
id = "id",
sex = "mysex",
age = "myage",
sbp = "mysbp",
treat = "mytreat",
smoking = "mysmoking",
diabetes = "mydiabetes",
totalchol = "mytotalchol",
hdl = "myhdl"
)
firstmeasure$lt=frs$frs_orig
ages=c(20:80)
modelfit=fitfunc2(data.table(train),ages = ages,nstates = nstates,mode = "binomial",covariates ="cad.prs+f.31.0.0+smoke+antihtn_now+statin_now")
#
firstmeasure=firstmeasure[firstmeasure$LIPRX1==0&firstmeasure$HRX1==0&firstmeasure$TC1<240&firstmeasure$DMRX1==0,]
b=coefplotsmooth2(ages = ages,start = "Health",stop = "Cad",modelfit = modelfit,window_width = 20,span = 0.75,degree = 2)
coefs=b$custom_smooth
ten.year.new=lifetime.new=ascvd.30.year=ascvd.10.year=emp.ten.year=emp.lifetime=vector()
agesint=seq(40,55,by=5)
aucmat=semat=matrix(NA,nrow=length(agesint),ncol=4)
firstmeasure$round5=round_any(firstmeasure$AGE1,5,f = round)
for(i in 1:length(agesint)){
age=agesint[i]
atrisk=firstmeasure[which(firstmeasure$round5==age),]
ar = data.frame(
"intercept" = 1,
"cad.prs" = atrisk$score,
"sex" = atrisk$sexu,
"smoke" = atrisk$CURRSMK1,
"antihtn_now" = atrisk$HRX1,
"statin_now" = atrisk$LIPRX1
)
ar=na.omit(ar)
atrisk$msten= compute_prediction_product_matrix(
atrisk = ar,
agepredinterval = c(age:(age + 10)),
coefmat = coefs
)$PredictedIntervalrisk
ten.year.new[i] = mean(atrisk$msten)
atrisk$mslifetime=compute_prediction_product_matrix(
atrisk = ar,
agepredinterval = c(age:(80)),
coefmat = coefs
)$PredictedIntervalrisk
lifetime.new[i] = mean(atrisk$mslifetime)
emp.ten.year[i] = mean(atrisk$chd==1&atrisk$chddate<(365*10))
emp.lifetime[i] = mean(atrisk$chd==1&atrisk$chddate<(365*(80-age)))
ascvd.10.year[i]=mean(atrisk$as2)
ascvd.30.year[i]=mean(atrisk$lt)
atrisk$outcometen=ifelse(atrisk$chd==1&atrisk$chddate<(365*10),1,0)
atrisk$outcomelife=ifelse(atrisk$chd==1&atrisk$chddate<(365*(80-age)),1,0)
#d=d[!is.na(d$ascvd_10y_accaha),]
aucmat[i, 1] = roc(atrisk$outcometen ~ atrisk$msten)$auc
semat[i, 1] = sqrt(var(roc(atrisk$outcometen ~ atrisk$msten)))
#
aucmat[i, 2] = roc(atrisk$outcometen ~ atrisk$as2)$auc
semat[i, 2] = sqrt(var(roc(atrisk$outcometen ~ atrisk$as2)))
#
aucmat[i, 3] = roc(atrisk$outcomelife ~ atrisk$mslifetime)$auc
semat[i, 3] = sqrt(var(roc(atrisk$outcomelife ~ atrisk$mslifetime)))
aucmat[i, 4] =  roc(atrisk$outcomelife ~ atrisk$lt)$auc
semat[i, 4] = sqrt(var(roc(atrisk$outcomelife ~ atrisk$lt)))
}
library(ehaGoF)
pcten=gofRMSE(Obs = as.vector(emp.ten.year*100),Prd = as.vector(ascvd.10.year))
msten=gofRMSE(Obs = as.vector(emp.ten.year*100),Prd = as.vector(ten.year.new*100))
mslif=gofRMSE(Obs = as.vector(emp.lifetime*100),Prd = as.vector(lifetime.new*100))
pclif=gofRMSE(Obs = as.vector(emp.lifetime*100),Prd = as.vector(ascvd.30.year))
pclif
mslif
msten
pcten
aucmat
df <- data.frame(
metric = c("PCEten", "MSTen", "MSLife", "FRS30y"),
value = c(pcten,msten,mslif,pclif)
)
df$metric=factor(df$metric,levels = c("MSTen","PCEten","MSLife","FRS30y"))
# Create the barplot
rmse=ggplot(df, aes(x = metric, y = value,fill=metric)) +
geom_bar(stat = "identity") +
labs(y = "RMSE (%)", x = "Score",fill="score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rownames(aucmat)=rownames(semat)=agesint
colnames(aucmat)=colnames(semat)=c("MSten","PCEten","MSLife","FRS30y")
# Convert matrices to data frames
df_auc <- as.data.frame(aucmat)
df_se <- as.data.frame(semat)
# Add age column
df_auc$age <- rownames(df_auc)
df_se$age <- rownames(df_se)
# Convert data frames to long format
df_auc_long <- df_auc %>%
gather(key = "metric", value = "value", -age)
df_auc_long$metric=factor(df_auc_long$metric,levels = c("MSten","PCEten","MSLife","FRS30y"))
df_se_long <- df_se %>%
gather(key = "metric", value = "se_value", -age)
df_se_long$metric=factor(df_se_long$metric,levels = c("MSten","PCEten","MSLife","FRS30y"))
# Join both data frames
df <- left_join(df_auc_long, df_se_long, by = c("age", "metric"))
# Plot using ggplot2
fos_auc=ggplot(df, aes(x = age, y = value, fill = metric, group = metric)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(
aes(ymin = value - se_value, ymax = value + se_value),
position = position_dodge(width = 0.8),
width = 0.25
) +
labs(y = "AUC ROC", x = "Ages",fill="Score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggarrange(rmse,fos_auc,common.legend = T)
df <- data.frame(
metric = c( "MSLife", "FRS30y"),
value = c(pcten,msten,mslif,pclif)
)
df$metric=factor(df$metric,levels = c("MSLife","FRS30y"))
# Create the barplot
rmse=ggplot(df, aes(x = metric, y = value,fill=metric)) +
geom_bar(stat = "identity") +
labs(y = "RMSE (%)", x = "Score",fill="score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rownames(aucmat)=rownames(semat)=agesint
colnames(aucmat)=colnames(semat)=c("MSLife","FRS30y")
df <- data.frame(
metric = c( "MSLife", "FRS30y"),
value = c(pcten,msten,mslif,pclif)
)
df$metric=factor(df$metric,levels = c("MSLife","FRS30y"))
# Create the barplot
rmse=ggplot(df, aes(x = metric, y = value,fill=metric)) +
geom_bar(stat = "identity") +
labs(y = "RMSE (%)", x = "Score",fill="score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rownames(aucmat[,c(3,4)])=rownames(semat[,c(3,4)])=agesint
colnames(aucmat[,c(3,4)])=colnames(semat[,c(3,4)])=c("MSLife","FRS30y")
# Convert matrices to data frames
df_auc <- as.data.frame(aucmat)
df_se <- as.data.frame(semat)
# Add age column
df_auc$age <- rownames(df_auc)
df_se$age <- rownames(df_se)
# Convert data frames to long format
df_auc_long <- df_auc %>%
gather(key = "metric", value = "value", -age)
df_auc_long$metric=factor(df_auc_long$metric,levels = c("MSLife","FRS30y"))
df_se_long <- df_se %>%
gather(key = "metric", value = "se_value", -age)
df_se_long$metric=factor(df_se_long$metric,levels = c("MSLife","FRS30y"))
# Join both data frames
df <- left_join(df_auc_long, df_se_long, by = c("age", "metric"))
# Plot using ggplot2
fos_auc=ggplot(df, aes(x = age, y = value, fill = metric, group = metric)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(
aes(ymin = value - se_value, ymax = value + se_value),
position = position_dodge(width = 0.8),
width = 0.25
) +
labs(y = "AUC ROC", x = "Ages",fill="Score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggarrange(rmse,fos_auc,common.legend = T)
head(aucmat)
rownames(aucmat[,c(3,4)])=rownames(semat[,c(3,4)])=agesint
colnames(aucmat[,c(3,4)])=colnames(semat[,c(3,4)])=c("MSLife","FRS30y")
# Convert matrices to data frames
df_auc <- as.data.frame(aucmat[,c(3,4)]))
df <- data.frame(
metric = c( "MSLife", "FRS30y"),
value = c(pcten,msten,mslif,pclif)
)
df$metric=factor(df$metric,levels = c("MSLife","FRS30y"))
# Create the barplot
rmse=ggplot(df, aes(x = metric, y = value,fill=metric)) +
geom_bar(stat = "identity") +
labs(y = "RMSE (%)", x = "Score",fill="score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rownames(aucmat[,c(3,4)])=rownames(semat[,c(3,4)])=agesint
colnames(aucmat[,c(3,4)])=colnames(semat[,c(3,4)])=c("MSLife","FRS30y")
# Convert matrices to data frames
df_auc <- as.data.frame(aucmat[,c(3,4)]))
# Convert matrices to data frames
df_auc <- as.data.frame(aucmat[,c(3,4)])
df_se <- as.data.frame(semat[,c(3,4)])
# Add age column
df_auc$age <- rownames(df_auc)
df_se$age <- rownames(df_se)
# Convert data frames to long format
df_auc_long <- df_auc %>%
gather(key = "metric", value = "value", -age)
df_auc_long$metric=factor(df_auc_long$metric,levels = c("MSLife","FRS30y"))
df_se_long <- df_se %>%
gather(key = "metric", value = "se_value", -age)
df_se_long$metric=factor(df_se_long$metric,levels = c("MSLife","FRS30y"))
# Join both data frames
df <- left_join(df_auc_long, df_se_long, by = c("age", "metric"))
# Plot using ggplot2
fos_auc=ggplot(df, aes(x = age, y = value, fill = metric, group = metric)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_errorbar(
aes(ymin = value - se_value, ymax = value + se_value),
position = position_dodge(width = 0.8),
width = 0.25
) +
labs(y = "AUC ROC", x = "Ages",fill="Score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggarrange(rmse,fos_auc,common.legend = T)
ggsave(ggarrange(rmse,fos_auc,common.legend = T),file="~/multistate2/output/fosauc.pdf",dpi=600)
df
df <- data.frame(
metric = c( "MSLife", "FRS30y"),
value = c(pcten,msten,mslif,pclif)
)
df
0.08*0.92/(sqrt(2700))
aucmat
head(semat)
t=proc.time()
mod0=fitfunc2(data.table(train),ages = ages,nstates = nstates,mode = "binomial",covariates ="cad.prs+f.31.0.0")
b=coefplotsmooth2(ages = ages,start = "Ht",stop = "Cad",modelfit = mod0,window_width = 20,span = 0.75,degree = 2)
coefs_mod0=b$custom_smooth
mod1=fitfunc2(data.table(train),ages = ages,nstates = nstates,mode = "binomial",covariates ="cad.prs+f.31.0.0+smoke")
b=coefplotsmooth2(ages = ages,start = "Ht",stop = "Cad",modelfit = mod1,window_width = 20,span = 0.75,degree = 2)
coefs_mod1=b$custom_smooth
mod2=fitfunc2(data.table(train),ages = ages,nstates = nstates,mode = "binomial",covariates ="cad.prs+f.31.0.0+smoke+antihtn_now")
b=coefplotsmooth2(ages = ages,start = "Ht",stop = "Cad",modelfit = mod2,window_width = 20,span = 0.75,degree = 2)
mode2
mod2
mod2=fitfunc2(data.table(train),ages = ages,nstates = nstates,mode = "binomial",covariates ="cad.prs+f.31.0.0+smoke+antihtn_now")
